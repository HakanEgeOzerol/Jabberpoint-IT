name: Java CI/CD Pipeline

on:
  push:
    branches: ["development", "feature/*"]
  pull_request:
    branches: ["development", "feature/*"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run unit tests
        run: |
          echo "Running unit tests..."
          mvn test
          echo "Unit tests completed"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/target/surefire-reports/
            **/target/failsafe-reports/
          retention-days: 30

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: target/site/jacoco/
          retention-days: 30

  merge-to-testing:
    needs: build-and-test
    runs-on: ubuntu-latest
    # Only auto-merge if the branch is development.
    if: github.ref == 'refs/heads/development'
    steps:
      - name: Auto-merge to Testing
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git fetch origin
          git checkout testing || git checkout -b testing
          git merge development --no-edit
          git push origin testing

  integration-tests:
    needs: merge-to-testing
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Run Integration Tests
        run: |
          echo "Running integration tests..."
          mvn verify -P integration-test
          echo "Integration tests completed"

      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: |
            **/target/failsafe-reports/
          retention-days: 30

  merge-to-acceptance:
    needs: integration-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    steps:
      - name: Auto-merge to Acceptance
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git fetch origin
          git checkout acceptance || git checkout -b acceptance
          git merge testing --no-edit
          git push origin acceptance

  acceptance-tests:
    needs: merge-to-acceptance
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Run Acceptance Tests
        run: |
          echo "Running acceptance tests..."
          mvn verify -P acceptance-test
          echo "Acceptance tests completed"

      - name: Upload acceptance test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: acceptance-test-results
          path: |
            **/target/failsafe-reports/
          retention-days: 30

  merge-to-main:
    needs: acceptance-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    steps:
      - name: Auto-merge to Main
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git fetch origin
          git checkout main || git checkout -b main
          git merge acceptance --no-edit
          git push origin main

  production-deploy:
    needs: merge-to-main
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Production
        run: echo "Deploying to PRODUCTION environment"
