name: Java CI/CD Pipeline

on:
  push:
    branches: ["development", "testing", "acceptance", "main"]
  pull_request:
    branches: ["development", "testing", "acceptance", "main"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # - name: Check code style
      #   run: |
      #     mvn checkstyle:check
      #     mvn spotbugs:check
      #     mvn pmd:check
      #     echo "Code style check completed"

      - name: Run unit tests
        id: run_tests
        run: |
          echo "Running unit tests..."
          mvn test
          echo "Unit tests completed"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/target/surefire-reports/
            **/target/failsafe-reports/
          retention-days: 30

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: target/site/jacoco/
          retention-days: 30

      # - name: Run OWASP dependency check
      #   continue-on-error: true
      #   run: |
      #     mvn org.owasp:dependency-check-maven:update-only
      #     mvn org.owasp:dependency-check-maven:check
      #     echo "Note: Dependency check completed. Review any warnings in the report."

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: target/
          key: ${{ runner.os }}-build-${{ github.sha }}

  deploy-to-test:
    needs: build-and-test
    if: >
      (!cancelled() &&
       ((github.ref == 'refs/heads/development') ||
        (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'development')))
    runs-on: ubuntu-latest
    environment: testing
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Run Integration Tests
        id: integration_tests
        run: |
          echo "Running integration tests..."
          mvn verify -P integration-test
          echo "Integration tests completed"

      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: |
            **/target/failsafe-reports/
          retention-days: 30

      - name: Auto-merge to Testing
        if: success()
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git checkout testing
          git merge development
          git push origin testing

  deploy-to-acceptance:
    needs: deploy-to-test
    if: >
      (!cancelled() &&
       ((github.ref == 'refs/heads/testing') ||
        (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'testing')))
    runs-on: ubuntu-latest
    environment: acceptance
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Run Acceptance Tests
        id: acceptance_tests
        run: |
          echo "Running acceptance tests..."
          mvn verify -P acceptance-test
          echo "Acceptance tests completed"

      - name: Upload acceptance test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: acceptance-test-results
          path: |
            **/target/failsafe-reports/
          retention-days: 30

      - name: Auto-merge to Main
        if: success()
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git checkout main
          git merge testing
          git push origin main

  deploy-to-production:
    needs: deploy-to-acceptance
    if: >
      (!cancelled() &&
       ((github.ref == 'refs/heads/main') ||
        (github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main')))
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Production
        run: echo "Deploying to PRODUCTION environment"
