name: Java CI/CD Pipeline

on:
  push:
    branches: [ "development", "testing", "acceptance", "main" ]
  pull_request:
    branches: [ "development", "testing", "acceptance", "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Run tests
      run: mvn test
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          **/target/surefire-reports/
          **/target/failsafe-reports/
        retention-days: 30

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: target/site/jacoco/
        retention-days: 30

    - name: Run OWASP dependency check
      run: mvn org.owasp:dependency-check-maven:check
        
    - name: Cache build artifacts
      uses: actions/cache@v3
      with:
        path: target/
        key: ${{ runner.os }}-build-${{ github.sha }}

  deploy-to-test:
    needs: build-and-test
    if: github.ref == 'refs/heads/testing'
    runs-on: ubuntu-latest
    environment: testing
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Run Integration Tests
        run: mvn verify -P integration-test

  deploy-to-acceptance:
    needs: deploy-to-test
    if: github.ref == 'refs/heads/acceptance'
    runs-on: ubuntu-latest
    environment: acceptance
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Run Acceptance Tests
        run: mvn verify -P acceptance-test

  deploy-to-production:
    needs: deploy-to-acceptance
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Production
        run: echo "Deploying to PRODUCTION environment"
